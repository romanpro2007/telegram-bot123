import telebot
from telebot import types

bot = telebot.TeleBot('7466607506:AAH0L3XVmWX2hutP4SdPPJkSg7OoKR8Skdg')  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

# –î–∞–Ω–Ω—ã–µ
cities = {
    "–ù–∏–∫–æ–ª–∞–µ–≤": ["–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π", "–ò–Ω–≥—É–ª—å—Å–∫–∏–π", "–°–æ–ª—è–Ω—ã–µ", "–õ–µ—Å–∫–∏", "–ù–∞–º—ã–≤", "–ö–æ—Ä–∞–±–µ–ª—å–Ω—ã–π", "–ó–∞–≤–æ–¥—Å–∫–æ–π"],
    "–û–¥–µ—Å–∞": ["–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π", "–ö–∏–µ–≤—Å–∫–∏–π", "–ú–∞–ª–∏–Ω–æ–≤—Å–∫–∏–π", "–°—É–≤–æ—Ä–æ–≤—Å–∫–∏–π"],
    "–ö–∏–µ–≤": ["–ì–æ–ª–æ—Å–µ–µ–≤—Å–∫–∏–π", "–û–±–æ–ª–æ–Ω—å", "–ü–µ—á–µ—Ä—Å–∫–∏–π", "–ü–æ–¥–æ–ª—å—Å–∫–∏–π", "–®–µ–≤—á–µ–Ω–∫–æ–≤—Å–∫–∏–π", "–°–æ–ª–æ–º–µ–Ω—Å–∫–∏–π", "–°–≤—è—Ç–æ—à–∏–Ω—Å–∫–∏–π", "–î–Ω–µ–ø—Ä–æ–≤—Å–∫–∏–π", "–î–∞—Ä–Ω–∏—Ü–∫–∏–π", "–î–µ—Å–Ω—è–Ω—Å–∫–∏–π"],
    "–ó–∞–ø–æ—Ä–æ–∂—å–µ": ["–î–Ω–µ–ø—Ä–æ–≤—Å–∫–∏–π", "–ö–æ–º—É–Ω–∞—Ä—Å–∫–∏–π", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π", "–ó–∞–≤–æ–¥—Å–∫–∏–π", "–í–æ–∑–Ω–µ—Å–µ–Ω–æ–≤—Å–∫–∏–π", "–•–æ—Ä—Ç–∏—Ü–∫–∏–π", "–®–µ–≤—á–µ–Ω–∫–æ–≤—Å–∫–∏–π"]
}

products = {
    district: [
        "–ë–æ—à–∫–∏ Gagarin 31% -- 300 –≥—Ä–Ω",
        "–ë–æ—à–∫–∏ Opium 29% -- 290 –≥—Ä–Ω",
        "–ë–æ—à–∫–∏ Blackberry 25% -- 250 –≥—Ä–Ω",
        "–ë–æ—à–∫–∏ Tyson 29% -- 270 –≥—Ä–Ω"
    ] for city_districts in cities.values() for district in city_districts
}

product_prices = {
    "–ë–æ—à–∫–∏ Gagarin 31% -- 300 –≥—Ä–Ω": 300,
    "–ë–æ—à–∫–∏ Opium 29% -- 290 –≥—Ä–Ω": 290,
    "–ë–æ—à–∫–∏ Blackberry 25% -- 250 –≥—Ä–Ω": 250,
    "–ë–æ—à–∫–∏ Tyson 29% -- 270 –≥—Ä–Ω": 270
}

product_images = {
    "–ë–æ—à–∫–∏ Gagarin 31% -- 300 –≥—Ä–Ω": "./images/gagarin.jpg",
    "–ë–æ—à–∫–∏ Opium 29% -- 290 –≥—Ä–Ω": "./images/opium.jpg",
    "–ë–æ—à–∫–∏ Blackberry 25% -- 250 –≥—Ä–Ω": "./images/blackberry.jpg",
    "–ë–æ—à–∫–∏ Tyson 29% -- 270 –≥—Ä–Ω": "./images/tyson.jpg"
}

gram_options = ["2 –≥—Ä–∞–º–º–∞", "3 –≥—Ä–∞–º–º–∞", "5 –≥—Ä–∞–º–º + 1 –≥—Ä–∞–º–º(–±–æ–Ω—É—Å)", "10 –≥—Ä–∞–º–º + 3 –≥—Ä–∞–º–º–∞(–±–æ–Ω—É—Å)", "üîô–ù–∞–∑–∞–¥"]

payment_info = (
    "üí≥ –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –Ω–∞ –∫–∞—Ä—Ç—É\n"
    "`4149 5001 1329 8478`\n"
    "–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ —Å—é–¥–∞.\n"
    "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã."
)

user_state = {}

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
def add_support_button(markup):
    markup.add(types.KeyboardButton("üë®‚Äçüíª –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"))
    return markup

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for city in cities:
        markup.add(types.KeyboardButton(city))
    add_support_button(markup)
    bot.send_message(message.chat.id, "üèô –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏
@bot.message_handler(func=lambda message: message.text == "üë®‚Äçüíª –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
def tech_support(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/klad99_support"))
    bot.send_message(message.chat.id, "üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
@bot.message_handler(func=lambda message: message.text in cities)
def select_city(message):
    user_state[message.chat.id] = {"city": message.text}
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for district in cities[message.text]:
        markup.add(types.KeyboardButton(district))
    add_support_button(markup)
    bot.send_message(message.chat.id, f"üìç –ì–æ—Ä–æ–¥ {message.text} –≤—ã–±—Ä–∞–Ω. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞
@bot.message_handler(func=lambda message: any(message.text in d for d in cities.values()))
def select_district(message):
    chat_id = message.chat.id
    if chat_id not in user_state or "city" not in user_state[chat_id]:
        bot.send_message(chat_id, "‚ùó –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥.")
        return
    user_state[chat_id]["district"] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for product in products.get(message.text, []):
        markup.add(types.KeyboardButton(product))
    add_support_button(markup)
    bot.send_message(chat_id, f"üì¶ –†–∞–π–æ–Ω {message.text} –≤—ã–±—Ä–∞–Ω. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
@bot.message_handler(func=lambda message: message.text in product_prices)
def select_product(message):
    chat_id = message.chat.id
    product = message.text
    user_state[chat_id]["product"] = product
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for grams in gram_options:
        markup.add(types.KeyboardButton(grams))
    add_support_button(markup)

    photo_path = product_images.get(product)
    if photo_path:
        with open(photo_path, 'rb') as photo:
            bot.send_photo(chat_id, photo, caption=f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏: {product}\nüí∞ –¶–µ–Ω–∞ –∑–∞ –≥—Ä–∞–º–º: {product_prices[product]} –≥—Ä–Ω")
    else:
        bot.send_message(chat_id, f"üõí –í—ã –≤—ã–±—Ä–∞–ª–∏: {product}\nüí∞ –¶–µ–Ω–∞ –∑–∞ –≥—Ä–∞–º–º: {product_prices[product]} –≥—Ä–Ω")

    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞–º–º–æ–≤–∫–∏:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä–∞–º–º–æ–≤–∫–∏
@bot.message_handler(func=lambda message: message.text in gram_options)
def select_grams(message):
    chat_id = message.chat.id

    if message.text == "üîô–ù–∞–∑–∞–¥":
        district = user_state[chat_id].get("district")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for product in products.get(district, []):
            markup.add(types.KeyboardButton(product))
        add_support_button(markup)
        bot.send_message(chat_id, f"üì¶ –†–∞–π–æ–Ω {district} –≤—ã–±—Ä–∞–Ω. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)
        return

    grams = int(message.text.split()[0])
    product = user_state[chat_id]["product"]
    price_per_gram = product_prices[product]
    total = grams * price_per_gram
    user_state[chat_id]["grams"] = grams
    user_state[chat_id]["total"] = total

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª"))
    add_support_button(markup)
    bot.send_message(chat_id, f"üíµ –û–±—â–∞—è —Å—É–º–º–∞: *{total} –≥—Ä–Ω*\n\n{payment_info}", parse_mode='Markdown', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã
@bot.message_handler(func=lambda message: message.text == "‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª")
def confirm_payment(message):
    bot.send_message(message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º —á–µ–∫ –∏ –≤—Å–∫–æ—Ä–µ –æ—Ç–ø—Ä–∞–≤–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
